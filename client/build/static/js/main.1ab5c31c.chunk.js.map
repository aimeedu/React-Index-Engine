{"version":3,"sources":["components/Browser.js","components/usePosition.js","components/About.js","components/Admin.js","components/Home.js","components/Download.js","components/SearchGoogle.js","components/FileInput.js","components/MyNavbar.js","components/SearchEngine.js","App.js","serviceWorker.js","index.js"],"names":["Browser","props","info","useParams","nav","window","navigator","appName","appVersion","cookieEnabled","language","onLine","platform","userAgent","win","innerHeight","innerWidth","scr","screen","height","width","availHeight","availWidth","colorDepth","pixelDepth","loc","location","href","hostname","pathname","protocol","geolocation","getCurrentPosition","position","coords","longitude","latitude","useState","setPosition","error","setError","onChange","onError","message","useEffect","geo","watcher","watchPosition","clearWatch","usePosition","className","About","msg","target","Admin","fetchSearchHistories","a","async","axios","get","then","res","setState","SearchData","data","fetchIndexingHistories","IndexingData","indexing","e","preventDefault","inputURL","elements","userInput","value","inputDepth","userDepth","console","log","post","response","catch","isIndexed","count","state","Searchrows","this","map","i","key","_id","term","createdAt","timetosearch","Indexingrows","title","description","timeToIndex","Form","onSubmit","FormControl","type","placeholder","name","Button","id","variant","onClick","Component","style","marginTop","Home","Download","selectAll","results","document","getElementsByClassName","length","checked","isChecked","deselectAll","trimData","arr","newArr","push","trim","url","tocsv","csvRows","headers","Object","keys","join","row","values","header","escaped","replace","toxml","result","download","fileName","file","Blob","createElement","URL","createObjectURL","click","downloadFile","input","fileType","options","JSON","stringify","required","API_KEY","SearchGoogle","search","fetch","req","json","temp","items","final","link","snippet","delete","event","index","dataset","splice","checkBox","object","data-index","FileInput","showFile","files","split","reader","FileReader","onload","text","obj","parse","Result","lines","csvData","parser","DOMParser","doc","parseFromString","getElementsByTagName","xmlData","innerHTML","readAsText","accept","React","MyNavbar","Navbar","collapseOnSelect","expand","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","SearchEngine","caseInsensitive","partialMatch","api_call","searchFreq","checkCase","checkMatch","wordname","App","path","exact","component","Boolean","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ab5c31c.chunk.js","sourcesContent":["import {useParams} from 'react-router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport './Components.css';\nimport {usePosition} from './usePosition';\n\nconst Browser = (props) => {\n    const {info} = useParams();\n\n    const nav = \"App Name: \" + window.navigator.appName + \"\\n\"\n        + \"App Version: \" + window.navigator.appVersion + \"\\n\"\n        + \"Cookies Enabled: \" + window.navigator.cookieEnabled + \"\\n\"\n        + \"App Language: \" + window.navigator.language + \"\\n\"\n        + \"App Online: \" + window.navigator.onLine + \"\\n\"\n        + \"Platform: \" + window.navigator.platform + \"\\n\"\n        + \"User-agent header: \" + navigator.userAgent + \"\\n\";\n\n    const win = \"Window innerHeight: \" + window.innerHeight + \"\\n\"\n        + \"Window innerWidth: \" + window.innerWidth + \"\\n\";\n\n    const scr = \"Screen Height: \" + window.screen.height + \"\\n\"\n        + \"Screen Width: \" + window.screen.width + \"\\n\"\n        + \"Screen availHeight: \" + window.screen.availHeight + \"\\n\"\n        + \"Screen availWidth: \" + window.screen.availWidth + \"\\n\"\n        + \"Screen colorDepth: \" + window.screen.colorDepth + \"\\n\"\n        + \"Screen pixelDepth: \" + window.screen.pixelDepth + \"\\n\";\n\n    const loc = \"Location href: \" + window.location.href + \"\\n\"\n        + \"Location hostname: \" + window.location.hostname + \"\\n\"\n        + \"Location pathname: \" + window.location.pathname + \"\\n\"\n        + \"Location protocol: \" + window.location.protocol + \"\\n\";\n\n    let geoLocation = \"\";\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(displayLocationInfo);\n    }\n\n    function displayLocationInfo(position) {\n        geoLocation = \"GeoLocation longitude: \" + position.coords.longitude+ \"\\n\"\n            + \"GeoLocation latitude: \"+ position.coords.latitude;\n    }\n\n    const {latitude, longitude} = usePosition();\n\n    return (\n        <div className=\"level1\">\n            {\n            info === \"navigator\" ? <h2>{nav}</h2> :\n                info === \"window\" ? <h2>{win}</h2> :\n                    info === \"screen\" ? <h2>{scr}</h2> :\n                        info === \"location\" ? <h2>{loc}</h2> :\n                            info === \"geolocation\" ? <h2>latitude: {latitude}<br/>longitude: {longitude}<br/></h2>:\n                                null\n            }\n        </div>\n    )\n}\n\nexport default Browser;","import {useState, useEffect} from 'react';\nexport const usePosition = () => {\n    const [position, setPosition] = useState({});\n    const [error, setError] = useState(null);\n\n    const onChange = ({coords}) => {\n        setPosition({\n            latitude: coords.latitude,\n            longitude: coords.longitude,\n        });\n    };\n    const onError = (error) => {\n        setError(error.message);\n    };\n    useEffect(() => {\n        const geo = navigator.geolocation;\n        if (!geo) {\n            setError('Geolocation is not supported');\n            return;\n        }\n        let watcher = geo.watchPosition(onChange, onError);\n        return () => geo.clearWatch(watcher);\n    }, []);\n    return {...position, error};\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport './Components.css';\nimport {useParams} from 'react-router';\n\n// const style = {\n//     background: 'darkseagreen',\n//     margin: '60px',\n// }\n\n\nconst About = () => {\n    const {msg} = useParams();\n    return (\n        <div className=\"level1 email\">\n            {\n                msg === \"contact\" ?\n                    <h2><a href=\"mailto:aimeedu11@gmail.com?subject=Contact Developer\"target=\"_blank\">Contact Us</a></h2>\n                    : <h2>Developers: <br/>{ \"{ Fengzhang Du,  Yaniv Bronshtein }\" }<br/>{ \"{ Mohanad Osman,  Adam Binder }\" }<br/>{ \"{ Pizon Shetu }\" }</h2>\n            }\n        </div>\n    )\n}\nexport default About;","import React, {Component} from 'react';\nimport './Admin.css';\nimport {Button, Form, FormControl} from \"react-bootstrap\";\nimport axios from 'axios';\n\n\nclass Admin extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            SearchData:[],\n            IndexingData:[],\n            isIndexed: false,\n            count:0\n        }\n    }\n\n    // make AJAX calls, query the data from the search table. http://localhost:3000 or 5000/admin, both working\n    // as soon as you click on fetch data button, the table will show.\n    fetchSearchHistories = async () => {\n        /** when we use postgresql this code works\n        const res = await fetch('/admin');\n        const results = await res.json();\n        this.setState({\n            results\n        }) */\n        // below is for mongodb get search result, 'http://localhost:5000/custom'.\n        axios.get('/custom')\n            .then(res => {\n                this.setState({\n                    SearchData: res.data\n                })\n                // console.log(res.data);\n            })\n    }\n\n    fetchIndexingHistories = async () => {\n        // below is for mongodb get search result.,'http://localhost:5000/admin'\n        axios.get('/admin')\n            .then(res => {\n                this.setState({\n                    IndexingData: res.data\n                })\n                // console.log(res.data);\n            })\n    }\n\n    indexing = (e) => {\n        e.preventDefault();\n        // get the user input url\n        const inputURL = e.target.elements.userInput.value;\n        let inputDepth = e.target.elements.userDepth.value;\n        if (!inputDepth) {\n            inputDepth = 2;\n        }\n        console.log(inputURL);\n        console.log(inputDepth);\n        /** pass this url to the post function.*/\n        axios.post('/admin', {inputURL, inputDepth})\n            // .then((res)=>{\n            //     console.log(res.data);\n            //     console.log('Indexing Successfully! Data inserted in DB!');\n            // })\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error.response)\n            });\n        this.setState({\n            isIndexed: true,\n            count: this.state.count+1\n        })\n    }\n\n    render() {\n\n        const Searchrows = this.state.SearchData.map((SearchData, i) => {\n            return(\n                <tr key={i}>\n                    <td>{SearchData._id}</td>\n                    <td>{SearchData.term}</td>\n                    <td>{SearchData.count}</td>\n                    <td>{SearchData.createdAt}</td>\n                    <td>{SearchData.timetosearch}</td>\n                </tr>\n            )\n        })\n\n        const Indexingrows = this.state.IndexingData.map((IndexingData, i) => {\n            return(\n                <tr key={i}>\n                    <td>{IndexingData._id}</td>\n                    {/*<td>{IndexingData.url}</td>*/}\n                    <td>{IndexingData.title}</td>\n                    <td>{IndexingData.description}</td>\n                    <td>{IndexingData.createdAt}</td>\n                    <td>{IndexingData.timeToIndex}</td>\n                </tr>\n            )\n        })\n        return (\n            <div>\n                <h2>Indexing Launcher</h2>\n                <h3>{this.state.isIndexed?`Data inserted into DB! Indexing Count: ${this.state.count}`:null}</h3>\n                {/*<Form className=\"search\" onSubmit={this.indexing}>*/}\n                {/*    <FormControl className=\"mr-sm-1 searchBar\" type=\"url\" placeholder=\"Type a URL to be indexed.\" name=\"userInput\"/>*/}\n                {/*    <FormControl className=\"mr-sm-1\" type=\"number\" placeholder=\"Depth.\" name=\"userDepth\"/>*/}\n                {/*    <Button id=\"searchBtn\" variant=\"btn btn-light purple-btn\" type=\"submit\">Index</Button>*/}\n                {/*</Form>*/}\n\n                <Form className=\"input-group mb-4 search\" onSubmit={this.indexing}>\n                    <FormControl className=\"form-control\" type=\"url\" placeholder=\"Type a URL to be indexed.\" name=\"userInput\"/>\n                    <FormControl className=\"form-control col-3\" type=\"number\" placeholder=\"Input Depth.\" name=\"userDepth\"/>\n                        <div className=\"input-group-append\">\n                            <Button id=\"searchBtn\" variant=\"btn btn-light purple-btn\" type=\"submit\">Index</Button>\n                        </div>\n                </Form>\n\n                <br/><br/>\n\n                <h3>User Search Histories <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.fetchSearchHistories}>Fetch Data</button></h3>\n                <table className=\"\">\n                    <thead>\n                        <tr>\n                            <th>Search ID</th>\n                            <th>Terms</th>\n                            <th>Number of search results</th>\n                            <th>Created At</th>\n                            <th>Searching Time</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {Searchrows}\n                    </tbody>\n                </table>\n                <br/>\n\n                <h3>Indexing Histories <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.fetchIndexingHistories}>Fetch Data</button></h3>\n                <table className=\"\">\n                    <thead>\n                    <tr>\n                        {/*<th>Indexing ID</th>*/}\n                        <th>URL</th>\n                        <th>Title</th>\n                        <th>Description</th>\n                        <th>Created At</th>\n                        <th>Indexing Time</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {Indexingrows}\n                    </tbody>\n                </table>\n\n            </div>\n        );\n    }\n}\n\nexport default Admin;","import React from 'react';\nconst style = {\n    marginTop: '200px',\n}\n\nconst Home = () => {\n    return (\n        <div style={style}>\n            <h2>Phase 1, 2, 3 Completed.</h2>\n            <h2>This is my home page for CS 355 !</h2>\n        </div>\n    )\n}\nexport default Home;\n\n","import React, {Component} from 'react';\nimport './Components.css';\n\nclass Download extends Component {\n\n    // constructor(props){\n    //     super(props);\n    // }\n\n    selectAll = () => {\n        const results = document.getElementsByClassName(\"checkbox\");\n        for (let i = 0; i < results.length; i++) {\n            results[i].checked = true;\n        }\n        for (let i = 0; i< this.props.data.length; i++) {\n            this.props.data[i].isChecked = true;\n        }\n    }\n\n    deselectAll = () => {\n        const results = document.getElementsByClassName(\"checkbox\");\n        for (let i = 0; i < results.length; i++) {\n            results[i].checked = false;\n        }\n        for (let i = 0; i< this.props.data.length; i++) {\n            this.props.data[i].isChecked = false;\n        }\n    }\n\n    trimData = (data) => {\n        // copy the object array.\n        const arr = [...this.props.data];\n        let newArr = [];\n        for (let i = 0; i< arr.length; i++) {\n            if(arr[i].isChecked) {\n                newArr.push({\n                    title:arr[i].title.trim(),\n                    url:arr[i].url.trim(),\n                    description:arr[i].description.trim(),\n                });\n            }}\n        return newArr;\n    }\n\n    tocsv = (data) => {\n        const csvRows = [];\n        //get the headers\n        if (data.length !== 0){\n            const headers = Object.keys(data[0]);\n            csvRows.push(headers.join(','));\n\n            for (const row of data) {\n                const values = headers.map(header => {\n                    const escaped = (''+row[header]).replace(/\"/g, '\\\\\"');\n                    return `\"${escaped}\"`;\n                })\n                csvRows.push(values.join(','));\n            }\n            return csvRows.join('\\n');\n        }else{\n            return csvRows;\n        }\n    }\n\n    // toxml = (data) => {\n    //     let result = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<results>\\n\";\n    //     /* */\n    //     for(let i = 0; i<data.length; i++) {\n    //         if (data[i].isChecked) {\n    //             let title = data[i].title.trim();\n    //             let url = data[i].url.trim();\n    //             let description = data[i].description.trim();\n    //             result = result + \"<result>\\n<title>\" + title + \"</title>\\n\" +\n    //                 \"<url>\" + url + \"</url>\\n\" + \"<description>\" +\n    //                 description + \"</description>\\n</result>\\n\";\n    //         }\n    //     }\n    //     result += \"</results>\";\n    //     return result.trim();\n    // };\n\n    toxml = (data) => {\n        let result = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<results>\\n\";\n        for(let i = 0; i<data.length; i++) {\n\n                let title = data[i].title;\n                let url = data[i].url;\n                let description = data[i].description;\n                result = result + \"  <result>\\n    <title>\" + title + \"</title>\\n\" +\n                    \"    <url>\" + url + \"</url>\\n\" + \"    <description>\" +\n                    description + \"</description>\\n  </result>\\n\";\n\n        }\n        result += \"</results>\";\n        return result;\n    }\n\n    download = (data, fileName, type) => {\n        const file = new Blob([data], {type: type});\n        const a = document.createElement('a');\n        a.href = window.URL.createObjectURL(file);\n        a.download = fileName;\n        a.click();\n    }\n\n    downloadFile = (e) => {\n        e.preventDefault();\n        const input = e.target.elements.input.value;\n        const fileType = e.target.elements.options.value;\n        const fileName = input + fileType;\n        const trim = this.trimData(this.props.data);\n\n        // the data has already been stored in states in parent class, retrieve the data from this.props.data\n        if (fileType === \".csv\") {\n            const data = this.tocsv(trim);\n            this.download(data, fileName, \"text/csv\");\n        }\n        else if (fileType === \".json\") {\n            const data = JSON.stringify(trim);\n            // const data = this.tojson(this.props.data);\n            this.download(data, fileName, \"application/json\");\n        }else{\n            const data = this.toxml(trim);\n            this.download(data, fileName, \"text/xml\");\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form className=\"downloadFile\" onSubmit={this.downloadFile}>\n                    <div id=\"selector\">\n                        <button id=\"selectall\" className=\"btn btn-light purple-btn mr-sm-1\" type=\"button\" onClick={this.selectAll}>Select All</button>\n                        <button id=\"deselectall\" className=\"btn btn-light purple-btn\" type=\"button\" onClick={this.deselectAll}>Deselect All</button>\n                    </div>\n                        <button id=\"download\" className=\"btn btn-light mr-sm-1\" type=\"submit\">Download</button>\n                        <input id=\"fileName\" className=\"form-control mr-sm-1\" type=\"text\" placeholder=\"File Name\" name=\"input\" required=\"required\"/>\n                        <select name=\"options\" id=\"fileType\" className=\"custom-select\" required=\"required\">\n                            <option value=\".json\">.JSON</option>\n                            <option value=\".csv\">.CSV</option>\n                            <option value=\".xml\">.XML</option>\n                        </select>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Download;","import React, {Component} from 'react';\n// import '../App.css';\nimport './Components.css';\nimport Download from \"./Download\";\nimport {Button, Form, FormControl} from \"react-bootstrap\";\n\nconst API_KEY = \"AIzaSyDzFrh_sw6E2iClTjBjWCGLApEW_d9xXZU\";\n\nclass SearchGoogle extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            data: [],\n        }\n    }\n\n    search = async (e) => {\n        e.preventDefault();\n        const userInput = e.target.elements.userInput.value;\n        if(userInput){\n            const req = await fetch(`https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=010154474853921520295:rr3dcyakuje&q=${userInput}`)\n            // const data = await req.json();\n            const data = await req.json();\n            const temp = data.items;\n\n            // temp.forEach(function (object) {\n            //     object.isChecked = false;\n            // });\n\n            let final = [];\n            for (let i = 0; i<temp.length; i++){\n                final.push({\n                    title: temp[i].title,\n                    url:temp[i].link,\n                    description:temp[i].snippet,\n                    isChecked: false,\n                });\n            }\n\n            this.setState({\n                data: final,\n                // checked: Array(data.items.length).fill(false),\n            })\n\n            console.log(final);\n            // console.log(this.state.data);\n            // console.log(this.state.checked);\n        }\n    }\n\n    delete = (event) => {\n        const index = event.target.dataset.index;\n        this.setState(state => {\n            //make a copy of the data in the state.\n            const data = [...state.data]\n            data.splice(index, 1);\n            return{\n                data: data\n            }\n        })\n    }\n\n    // a controlled form handles all form changes via state, which is a very React way of doing things.\n    checkBox = (event) => {\n\n        const index = event.target.dataset.index;\n\n        this.setState(state => {\n            const data = [...state.data];\n            const object = state.data[index];\n            object.isChecked = !object.isChecked;\n            data.splice(index, 1, object);\n            return {\n                data\n            }\n        })\n\n        console.log(this.state.data);\n        // this.setState({\n        //     data\n        // })\n    }\n\n    render() {\n        return (\n            <div className=\"level1\">\n\n                <h2>Google Custom Search API</h2>\n                {/*<h3 id=\"searchRes\">You have {this.state.data.length} search results.</h3>*/}\n\n                {/*<form inline className=\"search\" onSubmit={this.search}>*/}\n                {/*    <input className=\"form-control\" type=\"text\" placeholder=\"Google\" name=\"userInput\" />*/}\n                {/*    <button className=\"btn btn-light\" type=\"submit\"> Search </button>*/}\n                {/*</form>*/}\n\n                <Form className=\"search\" onSubmit={this.search}>\n                    <FormControl className=\"mr-sm-1 searchBar\" type=\"text\" placeholder=\"Google\" name=\"userInput\"/>\n                    <Button id=\"searchBtn\" variant=\"btn btn-light purple-btn\" type=\"submit\">Search</Button>\n                </Form>\n                {/*<form className=\"search\" onSubmit={this.search}>*/}\n                {/*    <input className=\"mr-sm-2 searchBar\" type=\"text\" placeholder=\"Google\" name=\"userInput\"/>*/}\n                {/*    <Button variant=\"btn-light purple-btn\" type=\"submit\">Search</Button>*/}\n                {/*</form>*/}\n\n                {/*passing data as a property to child class*/}\n                <Download data={this.state.data} />\n\n                <div className=\"container\">\n                    {this.state.data.map((data, i) => {\n                        return (\n                            <div key={i} className=\"row\">\n                                <div className=\"col-sm-2\"></div>\n                                <div className=\"col-sm-8\">\n                                    <div className=\"box\">\n                                        <input data-index={i} className=\"checkbox\" type=\"checkbox\" name=\"check\" onChange={this.checkBox}/>\n                                        {/*<button className=\"btn btn-outline-primary\" data-index={i} onClick={this.delete}> Delete </button>*/}\n                                        <h4>{data.title}</h4>\n                                        <h5><a href={data.url}>{data.url}</a></h5>\n                                        <h5>{data.description}</h5>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default SearchGoogle;","import React from 'react';\nimport Download from \"./Download\";\nimport './Components.css';\n\nclass FileInput extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.fileInput = React.createRef();\n        this.state = {\n            data: [],\n        }\n    }\n    delete = (event) => {\n        const index = event.target.dataset.index;\n        this.setState(state => {\n            const data = [...state.data]\n            data.splice(index, 1);\n            return{\n                data: data,\n            }\n        })\n    }\n    // a controlled form handles all form changes via state, which is a very React way of doing things.\n    checkBox = (event) => {\n        const index = event.target.dataset.index;\n        this.setState(state => {\n            const data = [...state.data];\n            const object = state.data[index];\n            object.isChecked = !object.isChecked;\n            data.splice(index, 1, object);\n            return {\n                data\n            }\n        })\n\n        console.log(this.state.data);\n        // this.setState({\n        //     data\n        // })\n    }\n\n    // uploadFile = (event) => {\n    //     let file = event.target.files[0];\n    //     console.log(file);\n    //\n    //     let data = new FormData();\n    //     if (file) {\n    //         // data.append sends key value pair.\n    //         data.append('file', file);\n    //         console.log(data);\n    //         // axios.post('/files', data)...\n    //     }\n    // }\n\n    showFile = async (e) => {\n        e.preventDefault();\n        //get file name.\n        const fileName = e.target.files[0].name;\n        // check file type.\n        const type = fileName.split(\".\")[1];\n        // read the file contents as plain text.\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n            const text = (e.target.result);\n            // console.log(text);\n            //todo: add isChecked\n            if (type === \"json\") {\n                // JSON.parse() take a json string and turn it into a json object.\n                let obj = JSON.parse(text);\n                this.setState({\n                    data: obj.Result,\n                })\n                // console.log(obj); // return a object { ... }\n                // console.log(obj.Result); //return an array [{...}, {....}]\n            }\n            else if (type === \"csv\") {\n                const lines = text.split(\"\\n\");\n                // console.log(lines);\n                let csvData = [];\n\n                for (let i = 0; i<lines.length; i++){\n                    let arr = lines[i].split(\",\");\n                    csvData.push({\n                        title: arr[0],\n                        url: arr[1],\n                        description: arr[2],\n                        isChecked: false,\n                    });\n                }\n                this.setState({\n                    data: csvData,\n                })\n            }\n            else{\n                const parser = new DOMParser();\n                let doc = parser.parseFromString(text, \"text/xml\");\n                const results = doc.getElementsByTagName(\"result\");\n\n                let xmlData = [];\n                for (let i = 0; i<results.length; i++){\n                    xmlData.push({\n                        title: doc.getElementsByTagName(\"title\")[i].innerHTML,\n                        url: doc.getElementsByTagName(\"url\")[i].innerHTML,\n                        description: doc.getElementsByTagName(\"description\")[i].innerHTML,\n                        isChecked: false,\n                    });\n                }\n                this.setState({\n                    data: xmlData,\n                })\n            }\n        };\n        reader.readAsText(e.target.files[0])\n    }\n\n    render() {\n        return (\n            <div className=\"level1\">\n                <h2>File Upload</h2>\n                <input className=\"btn btn-outline-light search\" type=\"file\" accept=\".xml,.json,.csv\" onChange={this.showFile}/>\n                {/*passing data as a property to child class*/}\n                <Download data={this.state.data}/>\n\n                <div className=\"container\">\n                    {this.state.data.map((data, i) => {\n                        return (\n                            <div key={i} className=\"row\">\n                                <div className=\"col-sm-2\"></div>\n                                <div key={i} className=\"col-sm-8\">\n                                    <div className=\"box\">\n                                        <input data-index={i} className=\"checkbox\" type=\"checkbox\" name=\"check\" onChange={this.checkBox}/>\n                                        {/*<button className=\"btn btn-outline-primary\" data-index={i} onClick={this.delete}> Delete </button>*/}\n                                        <h3>{data.title}</h3>\n                                        <h4><a href={data.url}>{data.url}</a></h4>\n                                        <h5>{data.description}</h5>\n                                    </div>\n                                </div>\n                            </div>\n                        )})}\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default FileInput;","import { Navbar, Nav, NavDropdown} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport './Components.css';\n\nconst MyNavbar = (props) => {\n    return (\n        <Navbar collapseOnSelect=\"true\" variant=\"dark\" expand=\"lg\" className=\"myStyle\">\n            <LinkContainer to=\"/\">\n                <Navbar.Brand>CS355</Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <LinkContainer to=\"/\">\n                        <Nav.Link>Home</Nav.Link>\n                    </LinkContainer>\n\n                    <NavDropdown title=\"Course\" id=\"course-dropdown\">\n                        <NavDropdown.Item href=\"https://www.zybooks.com\">Zybooks</NavDropdown.Item>\n                        <NavDropdown.Item href=\"https://tophat.com\">TopHat</NavDropdown.Item>\n                        <NavDropdown.Item href=\"https://www.google.com/drive/\">Google Drive</NavDropdown.Item>\n                        <NavDropdown.Item href=\"https://www.w3schools.com\">W3Schools</NavDropdown.Item>\n                    </NavDropdown>\n\n                    <NavDropdown title=\"Search\" id=\"search-dropdown\">\n                        <LinkContainer to=\"/file\">\n                            <NavDropdown.Item>Search From A File</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to=\"/google\">\n                            <NavDropdown.Item>Google Search</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to=\"/custom\">\n                            <NavDropdown.Item>Custom Search Engine</NavDropdown.Item>\n                        </LinkContainer>\n                    </NavDropdown>\n\n                    <NavDropdown title=\"Browser\" id=\"basic-nav-dropdown\">\n                        <LinkContainer to=\"/browser/navigator\">\n                            <NavDropdown.Item>Navigator</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to=\"/browser/window\">\n                            <NavDropdown.Item>Window</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to=\"/browser/screen\">\n                            <NavDropdown.Item>Screen</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to=\"/browser/location\">\n                            <NavDropdown.Item>Location</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to=\"/browser/geolocation\">\n                            <NavDropdown.Item>Geolocation</NavDropdown.Item>\n                        </LinkContainer>\n                    </NavDropdown>\n\n                    <NavDropdown title=\"About\" id=\"about-dropdown\">\n                        <LinkContainer to=\"/about/developers\">\n                            <NavDropdown.Item>Developers</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to=\"/about/contact\">\n                            <NavDropdown.Item>Contact Us</NavDropdown.Item>\n                        </LinkContainer>\n                    </NavDropdown>\n\n                </Nav>\n                {/*<Form inline>*/}\n                {/*    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />*/}\n                {/*    <Button variant=\"outline-success\">Search</Button>*/}\n                {/*</Form>*/}\n                <LinkContainer to=\"/admin\" className=\"btn btn--outline-light\" id=\"admin\">\n                    <Nav.Link>Admin</Nav.Link>\n                </LinkContainer>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default MyNavbar;","import React, {Component} from 'react';\nimport {Button, Form, FormControl} from \"react-bootstrap\";\nimport './Components.css';\nimport Download from \"./Download\";\nimport axios from \"axios\";\n\nclass SearchEngine extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            caseInsensitive: false,\n            partialMatch: false,\n            term: null,\n            data:[],\n\n        }\n    }\n    /** Here, we are using $text and $search MongoDB operators for find all documents in collection collectionName which contains at least one word from the specified find query.\n     partial search */\n    search = async (e) => {\n        e.preventDefault();\n        const term = e.target.elements.userInput.value;\n        const username = e.target.elements.userInput.value;\n        this.setState({\n            term\n        });\n\n        let searchFreq, data;\n\n        if (this.state.caseInsensitive && this.state.partialMatch){\n            console.log(\"this.state.caseInsensitive && this.state.partialMatch\");\n        }\n\n        else if (this.state.caseInsensitive) {\n            console.log(\"this.state.caseInsensitive \");\n            const api_call = await fetch(`/admin/case/${term}`);\n            data = await api_call.json();\n            searchFreq = data.length;\n            console.log(searchFreq);\n        }\n\n        else if(this.state.partialMatch) {\n            const api_call = await fetch(`/admin/p/${term}`);\n            data = await api_call.json();\n            searchFreq = data.length;\n            console.log(searchFreq);\n        }\n\n        else {\n            //`http://localhost:5000/admin/${term}`\n            const api_call = await fetch(`/admin/${term}`);\n            data = await api_call.json();\n            searchFreq = data.length;\n            console.log(searchFreq);\n        }\n\n        /** send the term to back end 'http://localhost:5000/custom', add into db. */\n        axios.post('/custom', {term:term, searchFreq:searchFreq})\n            .then((res)=>{\n                console.log(res.data);\n                // console.log('Pass term to back end!');\n            });\n        this.setState({\n            data: data\n        })\n        console.log(this.state.data);\n\n    }\n    // a controlled form handles all form changes via state, which is a very React way of doing things.\n    checkBox = (event) => {\n\n        const index = event.target.dataset.index;\n\n        this.setState(state => {\n            const data = [...state.data];\n            const object = state.data[index];\n            object.isChecked = !object.isChecked;\n            data.splice(index, 1, object);\n            return {\n                data\n            }\n        })\n\n        console.log(this.state.data);\n        // this.setState({\n        //     data\n        // })\n    }\n\n    checkCase = () => {\n        this.setState({\n            caseInsensitive: !this.state.caseInsensitive,\n        })\n        console.log(this.state.caseInsensitive);\n    }\n\n    checkMatch = () => {\n        this.setState({\n            partialMatch: !this.state.partialMatch,\n        })\n        console.log(this.state.partialMatch);\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>My Custom Search Engine</h2>\n\n                <div className=\"checkbox\">\n                    <label><input type=\"checkbox\" name=\"case\" onChange={this.checkCase}/> Case Insensitive </label>\n                    {/*<label><input type=\"checkbox\" name=\"match\" onChange={this.checkMatch}/> Allow Partial Match </label>*/}\n                </div>\n\n\n                <Form className=\"search\" onSubmit={this.search}>\n                    <FormControl className=\"mr-sm-1 searchBar\" type=\"text\" placeholder=\"Type a word to Search.\" name=\"userInput\"/>\n                    <Button id=\"searchBtn\" variant=\"btn btn-light purple-btn\" type=\"submit\">Search</Button>\n                </Form>\n\n                <Download data={this.state.data} />\n<br/>\n                <h3> Search Term: {this.state.term}</h3>\n\n                {/*\\ when click search button*/}\n                {/*    pass the term to backend, insert into search table/ done*/}\n                {/*    query the page table. find all the entries with certain words.*/}\n                {/*    display the result*/}\n                {/*    download the result*/}\n\n                {this.state.data.length === 0? <h3>\"No results in DB for {this.state.term}!\"</h3>:\n                <div className=\"container\">\n\n                    {this.state.data.map((data, i) => {\n                        return (\n                            <div key={i} className=\"row\">\n                                <div className=\"col-sm-2\"></div>\n                                <div className=\"col-sm-8\">\n                                    <div className=\"box\">\n                                        <input data-index={i} id=\"ch\" className=\"checkbox\" type=\"checkbox\" name=\"check\" onChange={this.checkBox}/>\n                                        {/*<button className=\"btn btn-outline-primary\" data-index={i} onClick={this.delete}> Delete </button>*/}\n                                        <h4>Word Name: {data.wordname}</h4>\n                                        <h4>Title: {data.title}</h4>\n                                        <h4>Description: {data.description}</h4>\n                                        <h5><a href={data.url}>{data.url}</a></h5>\n                                        <h5>id: {data._id}</h5>\n                                        <h5>Created At: {data.createdAt}</h5>\n                                        <h5>Time to Search: </h5>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default SearchEngine;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport './App.css';\nimport Browser from './components/Browser';\nimport About from './components/About';\nimport Admin from './components/Admin';\nimport Home from './components/Home';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport SearchGoogle from \"./components/SearchGoogle\";\nimport FileInput from \"./components/FileInput\";\nimport MyNavbar from \"./components/MyNavbar\";\nimport SearchEngine from \"./components/SearchEngine\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"App-body\">\n                    <Router>\n                        <MyNavbar/>\n                        <Switch>\n                            <Route path=\"/\" exact component={Home}/>\n                            <Route path=\"/admin\" exact component={Admin}/>\n                            <Route path=\"/about/:msg\" component={About}/>\n                            <Route path=\"/browser/:info\" exact component={Browser}/>\n                            <Route path=\"/file\" exact component={FileInput}/>\n                            <Route path=\"/google\" exact component={SearchGoogle}/>\n                            <Route path=\"/custom\" exact component={SearchEngine}/>\n                        </Switch>\n                    </Router>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}