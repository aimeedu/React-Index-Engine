{"version":3,"sources":["components/Browser.js","components/usePosition.js","components/About.js","components/Admin.js","components/Home.js","components/Download.js","components/SearchGoogle.js","components/FileInput.js","components/MyNavbar.js","components/SearchEngine.js","App.js","serviceWorker.js","index.js"],"names":["Browser","props","info","useParams","nav","window","navigator","appName","appVersion","cookieEnabled","language","onLine","platform","userAgent","win","innerHeight","innerWidth","scr","screen","height","width","availHeight","availWidth","colorDepth","pixelDepth","loc","location","href","hostname","pathname","protocol","geolocation","getCurrentPosition","position","coords","longitude","latitude","useState","setPosition","error","setError","onChange","onError","message","useEffect","geo","watcher","watchPosition","clearWatch","usePosition","className","About","msg","target","Admin","fetchSearchHistories","a","axios","get","then","res","setState","SearchData","data","fetchIndexingHistories","IndexingData","indexing","e","preventDefault","inputURL","elements","userInput","value","inputDepth","userDepth","console","log","post","response","catch","isIndexed","count","state","Searchrows","this","map","i","_id","term","createdAt","timetosearch","Indexingrows","title","description","timeToIndex","Form","onSubmit","FormControl","type","placeholder","name","Button","id","variant","onClick","Component","Home","class","Download","selectAll","results","document","getElementsByClassName","length","checked","isChecked","deselectAll","trimData","arr","newArr","push","trim","url","tocsv","csvRows","headers","Object","keys","join","row","values","header","escaped","replace","toxml","result","download","fileName","file","Blob","createElement","URL","createObjectURL","click","downloadFile","input","fileType","options","JSON","stringify","required","SearchGoogle","search","fetch","req","json","temp","items","final","link","snippet","delete","event","index","dataset","splice","checkBox","object","data-index","FileInput","showFile","files","split","reader","FileReader","onload","text","obj","parse","Result","lines","csvData","parser","DOMParser","doc","parseFromString","getElementsByTagName","xmlData","innerHTML","readAsText","style","textAlign","accept","React","MyNavbar","Navbar","collapseOnSelect","expand","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","SearchEngine","caseInsensitive","partialMatch","api_call","searchFreq","checkCase","checkMatch","wordname","App","path","exact","component","Boolean","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b65c1fb5.chunk.js","sourcesContent":["import {useParams} from 'react-router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport './Components.css';\nimport {usePosition} from './usePosition';\n\nconst Browser = (props) => {\n    const {info} = useParams();\n\n    const nav = \"App Name: \" + window.navigator.appName + \"\\n\"\n        + \"App Version: \" + window.navigator.appVersion + \"\\n\"\n        + \"Cookies Enabled: \" + window.navigator.cookieEnabled + \"\\n\"\n        + \"App Language: \" + window.navigator.language + \"\\n\"\n        + \"App Online: \" + window.navigator.onLine + \"\\n\"\n        + \"Platform: \" + window.navigator.platform + \"\\n\"\n        + \"User-agent header: \" + navigator.userAgent + \"\\n\";\n\n    const win = \"Window innerHeight: \" + window.innerHeight + \"\\n\"\n        + \"Window innerWidth: \" + window.innerWidth + \"\\n\";\n\n    const scr = \"Screen Height: \" + window.screen.height + \"\\n\"\n        + \"Screen Width: \" + window.screen.width + \"\\n\"\n        + \"Screen availHeight: \" + window.screen.availHeight + \"\\n\"\n        + \"Screen availWidth: \" + window.screen.availWidth + \"\\n\"\n        + \"Screen colorDepth: \" + window.screen.colorDepth + \"\\n\"\n        + \"Screen pixelDepth: \" + window.screen.pixelDepth + \"\\n\";\n\n    const loc = \"Location href: \" + window.location.href + \"\\n\"\n        + \"Location hostname: \" + window.location.hostname + \"\\n\"\n        + \"Location pathname: \" + window.location.pathname + \"\\n\"\n        + \"Location protocol: \" + window.location.protocol + \"\\n\";\n\n    let geoLocation = \"\";\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(displayLocationInfo);\n    }\n\n    function displayLocationInfo(position) {\n        geoLocation = \"GeoLocation longitude: \" + position.coords.longitude+ \"\\n\"\n            + \"GeoLocation latitude: \"+ position.coords.latitude;\n    }\n\n    const {latitude, longitude} = usePosition();\n\n    return (\n        <div className=\"level1\">\n            {\n            info === \"navigator\" ? <h2>{nav}</h2> :\n                info === \"window\" ? <h2>{win}</h2> :\n                    info === \"screen\" ? <h2>{scr}</h2> :\n                        info === \"location\" ? <h2>{loc}</h2> :\n                            info === \"geolocation\" ? <h2>latitude: {latitude}<br/>longitude: {longitude}<br/></h2>:\n                                null\n            }\n        </div>\n    )\n}\n\nexport default Browser;","import {useState, useEffect} from 'react';\nexport const usePosition = () => {\n    const [position, setPosition] = useState({});\n    const [error, setError] = useState(null);\n\n    const onChange = ({coords}) => {\n        setPosition({\n            latitude: coords.latitude,\n            longitude: coords.longitude,\n        });\n    };\n    const onError = (error) => {\n        setError(error.message);\n    };\n    useEffect(() => {\n        const geo = navigator.geolocation;\n        if (!geo) {\n            setError('Geolocation is not supported');\n            return;\n        }\n        let watcher = geo.watchPosition(onChange, onError);\n        return () => geo.clearWatch(watcher);\n    }, []);\n    return {...position, error};\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport './Components.css';\nimport {useParams} from 'react-router';\n\n// const style = {\n//     background: 'darkseagreen',\n//     margin: '60px',\n// }\n\n\nconst About = () => {\n    const {msg} = useParams();\n    return (\n        <div className=\"level1 email\">\n            {\n                msg === \"contact\" ?\n                    <h2><a href=\"mailto:aimeedu16@gmail.com?subject=Contact Developer\"target=\"_blank\">Contact Us</a></h2>\n                    : <h2>Developers: <br/>{ \"{ Fengzhang Du , Yaniv Bronshtein }\" }<br/>{ \"{  Adam Binder, Pizon Shetu, Mohanad Osman }\" }</h2>\n            }\n        </div>\n    )\n}\nexport default About;","import React, {Component} from 'react';\nimport './Admin.css';\nimport {Button, Form, FormControl} from \"react-bootstrap\";\nimport axios from 'axios';\n\n\nclass Admin extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            SearchData:[],\n            IndexingData:[],\n            isIndexed: false,\n            count:0\n        }\n    }\n\n    // make AJAX calls, query the data from the search table. http://localhost:3000 or 5000/admin, both working\n    // as soon as you click on fetch data button, the table will show.\n    fetchSearchHistories = async () => {\n        /** when we use postgresql this code works\n        const res = await fetch('/admin');\n        const results = await res.json();\n        this.setState({\n            results\n        }) */\n        // below is for mongodb get search result, 'http://localhost:5000/custom'.\n        axios.get('/custom')\n            .then(res => {\n                this.setState({\n                    SearchData: res.data\n                })\n                // console.log(res.data);\n            })\n    }\n\n    fetchIndexingHistories = async () => {\n        // below is for mongodb get search result.,'http://localhost:5000/admin'\n        axios.get('/admin')\n            .then(res => {\n                this.setState({\n                    IndexingData: res.data\n                })\n                // console.log(res.data);\n            })\n    }\n\n    indexing = (e) => {\n        e.preventDefault();\n        // get the user input url\n        const inputURL = e.target.elements.userInput.value;\n        let inputDepth = e.target.elements.userDepth.value;\n        if (!inputDepth) {\n            inputDepth = 2;\n        }\n        console.log(inputURL);\n        console.log(inputDepth);\n        /** pass this url to the post function.*/\n        axios.post('/admin', {inputURL, inputDepth})\n            // .then((res)=>{\n            //     console.log(res.data);\n            //     console.log('Indexing Successfully! Data inserted in DB!');\n            // })\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error.response)\n            });\n        this.setState({\n            isIndexed: true,\n            count: this.state.count+1\n        })\n    }\n\n    render() {\n\n        const Searchrows = this.state.SearchData.map((SearchData, i) => {\n            return(\n                <tr key={i}>\n                    <td>{SearchData._id}</td>\n                    <td>{SearchData.term}</td>\n                    <td>{SearchData.count}</td>\n                    <td>{SearchData.createdAt}</td>\n                    <td>{SearchData.timetosearch}</td>\n                </tr>\n            )\n        })\n\n        const Indexingrows = this.state.IndexingData.map((IndexingData, i) => {\n            return(\n                <tr key={i}>\n                    <td>{IndexingData._id}</td>\n                    {/*<td>{IndexingData.url}</td>*/}\n                    <td>{IndexingData.title}</td>\n                    <td>{IndexingData.description}</td>\n                    <td>{IndexingData.createdAt}</td>\n                    <td>{IndexingData.timeToIndex}</td>\n                </tr>\n            )\n        })\n        return (\n            <div>\n                <h2>Indexing Launcher</h2>\n                <h3>{this.state.isIndexed?`Data inserted into DB! Indexing Count: ${this.state.count}`:null}</h3>\n                {/*<Form className=\"search\" onSubmit={this.indexing}>*/}\n                {/*    <FormControl className=\"mr-sm-1 searchBar\" type=\"url\" placeholder=\"Type a URL to be indexed.\" name=\"userInput\"/>*/}\n                {/*    <FormControl className=\"mr-sm-1\" type=\"number\" placeholder=\"Depth.\" name=\"userDepth\"/>*/}\n                {/*    <Button id=\"searchBtn\" variant=\"btn btn-light purple-btn\" type=\"submit\">Index</Button>*/}\n                {/*</Form>*/}\n\n                <Form className=\"input-group mb-4 search\" onSubmit={this.indexing}>\n                    <FormControl className=\"form-control\" type=\"url\" placeholder=\"Type a URL to be indexed.\" name=\"userInput\"/>\n                    <FormControl className=\"form-control col-3\" type=\"number\" placeholder=\"Input Depth.\" name=\"userDepth\"/>\n                        <div className=\"input-group-append\">\n                            <Button id=\"searchBtn\" variant=\"btn btn-light purple-btn\" type=\"submit\">Index</Button>\n                        </div>\n                </Form>\n\n                <br/><br/>\n\n                <h3>User Search Histories <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.fetchSearchHistories}>Fetch Data</button></h3>\n                <table className=\"\">\n                    <thead>\n                        <tr>\n                            <th>Search ID</th>\n                            <th>Terms</th>\n                            <th>Number of search results</th>\n                            <th>Created At</th>\n                            <th>Searching Time</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {Searchrows}\n                    </tbody>\n                </table>\n                <br/>\n\n                <h3>Indexing Histories <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.fetchIndexingHistories}>Fetch Data</button></h3>\n                <table className=\"\">\n                    <thead>\n                    <tr>\n                        {/*<th>Indexing ID</th>*/}\n                        <th>URL</th>\n                        <th>Title</th>\n                        <th>Description</th>\n                        <th>Created At</th>\n                        <th>Indexing Time</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {Indexingrows}\n                    </tbody>\n                </table>\n\n            </div>\n        );\n    }\n}\n\nexport default Admin;","import React from 'react';\nimport './Components.css';\n\n// const style = {\n//     marginTop: '200px',\n//     width: '18rem'\n// }\n\nconst Home = () => {\n    return (\n        <div id=\"home\" class=\"card\">\n            <h2>Welcome to the Home Page!</h2>\n        \n            <ul id=\"homelist\">\n                \n                <h4>Instructions:</h4>\n                <li>Click on 'Indexing Launcher', then you can input a web page to index all the words from that page.</li>\n                <li>Click on 'Custom Search Engine' to search the words in the database you have priviously indexed.</li>\n                <br/>\n                Dropdown Menus: \n                <li>Search: Search from a file or search from google.</li>\n                <li>Browser: Display your browser sepcification. </li>\n                <li>Geolocation: Displays your current latitude and longitude.</li>\n                <li>About: Developer's names and you can contact us by email.</li>\n            </ul>\n        \n        </div>\n    )\n}\nexport default Home;\n\n","import React, {Component} from 'react';\nimport './Components.css';\n\nclass Download extends Component {\n\n    // constructor(props){\n    //     super(props);\n    // }\n\n    selectAll = () => {\n        const results = document.getElementsByClassName(\"checkbox\");\n        for (let i = 0; i < results.length; i++) {\n            results[i].checked = true;\n        }\n        for (let i = 0; i< this.props.data.length; i++) {\n            this.props.data[i].isChecked = true;\n        }\n    }\n\n    deselectAll = () => {\n        const results = document.getElementsByClassName(\"checkbox\");\n        for (let i = 0; i < results.length; i++) {\n            results[i].checked = false;\n        }\n        for (let i = 0; i< this.props.data.length; i++) {\n            this.props.data[i].isChecked = false;\n        }\n    }\n\n    trimData = (data) => {\n        // copy the object array.\n        const arr = [...this.props.data];\n        let newArr = [];\n        for (let i = 0; i< arr.length; i++) {\n            if(arr[i].isChecked) {\n                newArr.push({\n                    title:arr[i].title.trim(),\n                    url:arr[i].url.trim(),\n                    description:arr[i].description.trim(),\n                });\n            }}\n        return newArr;\n    }\n\n    tocsv = (data) => {\n        const csvRows = [];\n        //get the headers\n        if (data.length !== 0){\n            const headers = Object.keys(data[0]);\n            csvRows.push(headers.join(','));\n\n            for (const row of data) {\n                const values = headers.map(header => {\n                    const escaped = (''+row[header]).replace(/\"/g, '\\\\\"');\n                    return `\"${escaped}\"`;\n                })\n                csvRows.push(values.join(','));\n            }\n            return csvRows.join('\\n');\n        }else{\n            return csvRows;\n        }\n    }\n\n    // toxml = (data) => {\n    //     let result = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<results>\\n\";\n    //     /* */\n    //     for(let i = 0; i<data.length; i++) {\n    //         if (data[i].isChecked) {\n    //             let title = data[i].title.trim();\n    //             let url = data[i].url.trim();\n    //             let description = data[i].description.trim();\n    //             result = result + \"<result>\\n<title>\" + title + \"</title>\\n\" +\n    //                 \"<url>\" + url + \"</url>\\n\" + \"<description>\" +\n    //                 description + \"</description>\\n</result>\\n\";\n    //         }\n    //     }\n    //     result += \"</results>\";\n    //     return result.trim();\n    // };\n\n    toxml = (data) => {\n        let result = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<results>\\n\";\n        for(let i = 0; i<data.length; i++) {\n\n                let title = data[i].title;\n                let url = data[i].url;\n                let description = data[i].description;\n                result = result + \"  <result>\\n    <title>\" + title + \"</title>\\n\" +\n                    \"    <url>\" + url + \"</url>\\n\" + \"    <description>\" +\n                    description + \"</description>\\n  </result>\\n\";\n\n        }\n        result += \"</results>\";\n        return result;\n    }\n\n    download = (data, fileName, type) => {\n        const file = new Blob([data], {type: type});\n        const a = document.createElement('a');\n        a.href = window.URL.createObjectURL(file);\n        a.download = fileName;\n        a.click();\n    }\n\n    downloadFile = (e) => {\n        e.preventDefault();\n        const input = e.target.elements.input.value;\n        const fileType = e.target.elements.options.value;\n        const fileName = input + fileType;\n        const trim = this.trimData(this.props.data);\n\n        // the data has already been stored in states in parent class, retrieve the data from this.props.data\n        if (fileType === \".csv\") {\n            const data = this.tocsv(trim);\n            this.download(data, fileName, \"text/csv\");\n        }\n        else if (fileType === \".json\") {\n            const data = JSON.stringify(trim);\n            // const data = this.tojson(this.props.data);\n            this.download(data, fileName, \"application/json\");\n        }else{\n            const data = this.toxml(trim);\n            this.download(data, fileName, \"text/xml\");\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form className=\"downloadFile\" onSubmit={this.downloadFile}>\n                    <div id=\"selector\">\n                        <button id=\"selectall\" className=\"btn btn-light purple-btn mr-sm-1\" type=\"button\" onClick={this.selectAll}>Select All</button>\n                        <button id=\"deselectall\" className=\"btn btn-light purple-btn\" type=\"button\" onClick={this.deselectAll}>Deselect All</button>\n                    </div>\n                        <button id=\"download\" className=\"btn btn-light mr-sm-1\" type=\"submit\">Download</button>\n                        <input id=\"fileName\" className=\"form-control mr-sm-1\" type=\"text\" placeholder=\"File Name\" name=\"input\" required=\"required\"/>\n                        <select name=\"options\" id=\"fileType\" className=\"custom-select\" required=\"required\">\n                            <option value=\".json\">.JSON</option>\n                            <option value=\".csv\">.CSV</option>\n                            <option value=\".xml\">.XML</option>\n                        </select>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Download;","import React, {Component} from 'react';\n// import '../App.css';\nimport './Components.css';\nimport Download from \"./Download\";\nimport {Button, Form, FormControl} from \"react-bootstrap\";\n\nconst API_KEY = \"AIzaSyDzFrh_sw6E2iClTjBjWCGLApEW_d9xXZU\";\n\nclass SearchGoogle extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            data: [],\n        }\n    }\n\n    search = async (e) => {\n        e.preventDefault();\n        const userInput = e.target.elements.userInput.value;\n        if(userInput){\n            const req = await fetch(`https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=010154474853921520295:rr3dcyakuje&q=${userInput}`)\n            // const data = await req.json();\n            const data = await req.json();\n            const temp = data.items;\n\n            // temp.forEach(function (object) {\n            //     object.isChecked = false;\n            // });\n\n            let final = [];\n            for (let i = 0; i<temp.length; i++){\n                final.push({\n                    title: temp[i].title,\n                    url:temp[i].link,\n                    description:temp[i].snippet,\n                    isChecked: false,\n                });\n            }\n\n            this.setState({\n                data: final,\n                // checked: Array(data.items.length).fill(false),\n            })\n\n            console.log(final);\n            // console.log(this.state.data);\n            // console.log(this.state.checked);\n        }\n    }\n\n    delete = (event) => {\n        const index = event.target.dataset.index;\n        this.setState(state => {\n            //make a copy of the data in the state.\n            const data = [...state.data]\n            data.splice(index, 1);\n            return{\n                data: data\n            }\n        })\n    }\n\n    // a controlled form handles all form changes via state, which is a very React way of doing things.\n    checkBox = (event) => {\n\n        const index = event.target.dataset.index;\n\n        this.setState(state => {\n            const data = [...state.data];\n            const object = state.data[index];\n            object.isChecked = !object.isChecked;\n            data.splice(index, 1, object);\n            return {\n                data\n            }\n        })\n\n        console.log(this.state.data);\n        // this.setState({\n        //     data\n        // })\n    }\n\n    render() {\n        return (\n            <div className=\"level1\">\n\n                <h2>Google Custom Search API</h2>\n                {/*<h3 id=\"searchRes\">You have {this.state.data.length} search results.</h3>*/}\n\n                {/*<form inline className=\"search\" onSubmit={this.search}>*/}\n                {/*    <input className=\"form-control\" type=\"text\" placeholder=\"Google\" name=\"userInput\" />*/}\n                {/*    <button className=\"btn btn-light\" type=\"submit\"> Search </button>*/}\n                {/*</form>*/}\n\n                <Form className=\"search\" onSubmit={this.search}>\n                    <FormControl className=\"mr-sm-1 searchBar\" type=\"text\" placeholder=\"Google\" name=\"userInput\"/>\n                    <Button id=\"searchBtn\" variant=\"btn btn-light purple-btn\" type=\"submit\">Search</Button>\n                </Form>\n                {/*<form className=\"search\" onSubmit={this.search}>*/}\n                {/*    <input className=\"mr-sm-2 searchBar\" type=\"text\" placeholder=\"Google\" name=\"userInput\"/>*/}\n                {/*    <Button variant=\"btn-light purple-btn\" type=\"submit\">Search</Button>*/}\n                {/*</form>*/}\n\n                {/*passing data as a property to child class*/}\n                <Download data={this.state.data} />\n\n                <div className=\"container\">\n                    {this.state.data.map((data, i) => {\n                        return (\n                            <div key={i} className=\"row\">\n                                <div className=\"col-sm-2\"></div>\n                                <div className=\"col-sm-8\">\n                                    <div className=\"box\">\n                                        <input data-index={i} className=\"checkbox\" type=\"checkbox\" name=\"check\" onChange={this.checkBox}/>\n                                        {/*<button className=\"btn btn-outline-primary\" data-index={i} onClick={this.delete}> Delete </button>*/}\n                                        <h4>{data.title}</h4>\n                                        <h5><a href={data.url}>{data.url}</a></h5>\n                                        <h5>{data.description}</h5>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default SearchGoogle;","import React from 'react';\nimport Download from \"./Download\";\nimport './Components.css';\n\nclass FileInput extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.fileInput = React.createRef();\n        this.state = {\n            data: [],\n        }\n    }\n    delete = (event) => {\n        const index = event.target.dataset.index;\n        this.setState(state => {\n            const data = [...state.data]\n            data.splice(index, 1);\n            return{\n                data: data,\n            }\n        })\n    }\n    // a controlled form handles all form changes via state, which is a very React way of doing things.\n    checkBox = (event) => {\n        const index = event.target.dataset.index;\n        this.setState(state => {\n            const data = [...state.data];\n            const object = state.data[index];\n            object.isChecked = !object.isChecked;\n            data.splice(index, 1, object);\n            return {\n                data\n            }\n        })\n\n        console.log(this.state.data);\n        // this.setState({\n        //     data\n        // })\n    }\n\n    // uploadFile = (event) => {\n    //     let file = event.target.files[0];\n    //     console.log(file);\n    //\n    //     let data = new FormData();\n    //     if (file) {\n    //         // data.append sends key value pair.\n    //         data.append('file', file);\n    //         console.log(data);\n    //         // axios.post('/files', data)...\n    //     }\n    // }\n\n    showFile = async (e) => {\n        e.preventDefault();\n        //get file name.\n        const fileName = e.target.files[0].name;\n        // check file type.\n        const type = fileName.split(\".\")[1];\n        // read the file contents as plain text.\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n            const text = (e.target.result);\n            // console.log(text);\n            //todo: add isChecked\n            if (type === \"json\") {\n                // JSON.parse() take a json string and turn it into a json object.\n                let obj = JSON.parse(text);\n                this.setState({\n                    data: obj.Result,\n                })\n                // console.log(obj); // return a object { ... }\n                // console.log(obj.Result); //return an array [{...}, {....}]\n            }\n            else if (type === \"csv\") {\n                const lines = text.split(\"\\n\");\n                // console.log(lines);\n                let csvData = [];\n\n                for (let i = 0; i<lines.length; i++){\n                    let arr = lines[i].split(\",\");\n                    csvData.push({\n                        title: arr[0],\n                        url: arr[1],\n                        description: arr[2],\n                        isChecked: false,\n                    });\n                }\n                this.setState({\n                    data: csvData,\n                })\n            }\n            else{\n                const parser = new DOMParser();\n                let doc = parser.parseFromString(text, \"text/xml\");\n                const results = doc.getElementsByTagName(\"result\");\n\n                let xmlData = [];\n                for (let i = 0; i<results.length; i++){\n                    xmlData.push({\n                        title: doc.getElementsByTagName(\"title\")[i].innerHTML,\n                        url: doc.getElementsByTagName(\"url\")[i].innerHTML,\n                        description: doc.getElementsByTagName(\"description\")[i].innerHTML,\n                        isChecked: false,\n                    });\n                }\n                this.setState({\n                    data: xmlData,\n                })\n            }\n        };\n        reader.readAsText(e.target.files[0])\n    }\n\n    render() {\n        return (\n            <div className=\"level1\">\n                <h2>File Upload</h2>\n                <h5 style={{textAlign: 'center'}}>* Support files in .xml, .json, .csv formats.</h5>\n                <input className=\"btn btn-outline-light search\" type=\"file\" accept=\".xml,.json,.csv\" onChange={this.showFile}/>\n                {/*passing data as a property to child class*/}\n                <Download data={this.state.data}/>\n\n                <div className=\"container\">\n                    {this.state.data.map((data, i) => {\n                        return (\n                            <div key={i} className=\"row\">\n                                <div className=\"col-sm-2\"></div>\n                                <div key={i} className=\"col-sm-8\">\n                                    <div className=\"box\">\n                                        <input data-index={i} className=\"checkbox\" type=\"checkbox\" name=\"check\" onChange={this.checkBox}/>\n                                        {/*<button className=\"btn btn-outline-primary\" data-index={i} onClick={this.delete}> Delete </button>*/}\n                                        <h3>{data.title}</h3>\n                                        <h4><a href={data.url}>{data.url}</a></h4>\n                                        <h5>{data.description}</h5>\n                                    </div>\n                                </div>\n                            </div>\n                        )})}\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default FileInput;","import { Navbar, Nav, NavDropdown} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport './Components.css';\n\nconst MyNavbar = (props) => {\n    return (\n        <Navbar collapseOnSelect=\"true\" variant=\"dark\" expand=\"lg\" className=\"myStyle\">\n            <LinkContainer to=\"/\">\n                <Navbar.Brand>CS355</Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <LinkContainer to=\"/\">\n                        <Nav.Link>Home</Nav.Link>\n                    </LinkContainer>\n\n                    <NavDropdown title=\"Search\" id=\"search-dropdown\">\n                        <LinkContainer to=\"/file\">\n                            <NavDropdown.Item>Search From A File</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to=\"/google\">\n                            <NavDropdown.Item>Google Search</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to=\"/custom\">\n                            <NavDropdown.Item>Custom Search Engine</NavDropdown.Item>\n                        </LinkContainer>\n                    </NavDropdown>\n\n                    <NavDropdown title=\"Browser\" id=\"basic-nav-dropdown\">\n                        <LinkContainer to=\"/browser/navigator\">\n                            <NavDropdown.Item>Navigator</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to=\"/browser/screen\">\n                            <NavDropdown.Item>Screen</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to=\"/browser/geolocation\">\n                            <NavDropdown.Item>Geolocation</NavDropdown.Item>\n                        </LinkContainer>\n                    </NavDropdown>\n\n                    <NavDropdown title=\"About\" id=\"about-dropdown\">\n                        <LinkContainer to=\"/about/developers\">\n                            <NavDropdown.Item>Developers</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to=\"/about/contact\">\n                            <NavDropdown.Item>Contact Us</NavDropdown.Item>\n                        </LinkContainer>\n                    </NavDropdown>\n\n                </Nav>\n\n                <LinkContainer to=\"/admin\" className=\"btn btn--outline-light\" id=\"admin\">\n                    <Nav.Link>Indexing Launcher</Nav.Link>\n                </LinkContainer>\n                \n                <LinkContainer to=\"/custom\" className=\"btn btn--outline-light\" id=\"admin\">\n                    <Nav.Link>Custom Search Engine</Nav.Link>\n                </LinkContainer>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default MyNavbar;","import React, {Component} from 'react';\nimport {Button, Form, FormControl} from \"react-bootstrap\";\nimport './Components.css';\nimport Download from \"./Download\";\nimport axios from \"axios\";\n\nclass SearchEngine extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            caseInsensitive: false,\n            partialMatch: false,\n            term: null,\n            data:[],\n\n        }\n    }\n    /** Here, we are using $text and $search MongoDB operators for find all documents in collection collectionName which contains at least one word from the specified find query.\n     partial search */\n    search = async (e) => {\n        e.preventDefault();\n        const term = e.target.elements.userInput.value;\n        const username = e.target.elements.userInput.value;\n        this.setState({\n            term\n        });\n\n        let searchFreq, data;\n\n        if (this.state.caseInsensitive && this.state.partialMatch){\n            console.log(\"this.state.caseInsensitive && this.state.partialMatch\");\n        }\n\n        else if (this.state.caseInsensitive) {\n            console.log(\"this.state.caseInsensitive \");\n            const api_call = await fetch(`/admin/case/${term}`);\n            data = await api_call.json();\n            searchFreq = data.length;\n            console.log(searchFreq);\n        }\n\n        else if(this.state.partialMatch) {\n            const api_call = await fetch(`/admin/p/${term}`);\n            data = await api_call.json();\n            searchFreq = data.length;\n            console.log(searchFreq);\n        }\n\n        else {\n            //`http://localhost:5000/admin/${term}`\n            const api_call = await fetch(`/admin/${term}`);\n            data = await api_call.json();\n            searchFreq = data.length;\n            console.log(searchFreq);\n        }\n\n        /** send the term to back end 'http://localhost:5000/custom', add into db. */\n        axios.post('/custom', {term:term, searchFreq:searchFreq})\n            .then((res)=>{\n                console.log(res.data);\n                // console.log('Pass term to back end!');\n            });\n        this.setState({\n            data: data\n        })\n        console.log(this.state.data);\n\n    }\n    // a controlled form handles all form changes via state, which is a very React way of doing things.\n    checkBox = (event) => {\n\n        const index = event.target.dataset.index;\n\n        this.setState(state => {\n            const data = [...state.data];\n            const object = state.data[index];\n            object.isChecked = !object.isChecked;\n            data.splice(index, 1, object);\n            return {\n                data\n            }\n        })\n\n        console.log(this.state.data);\n        // this.setState({\n        //     data\n        // })\n    }\n\n    checkCase = () => {\n        this.setState({\n            caseInsensitive: !this.state.caseInsensitive,\n        })\n        console.log(this.state.caseInsensitive);\n    }\n\n    checkMatch = () => {\n        this.setState({\n            partialMatch: !this.state.partialMatch,\n        })\n        console.log(this.state.partialMatch);\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>My Custom Search Engine</h2>\n\n                <div className=\"checkbox\">\n                    <label><input type=\"checkbox\" name=\"case\" onChange={this.checkCase}/> Case Insensitive </label>\n                    {/*<label><input type=\"checkbox\" name=\"match\" onChange={this.checkMatch}/> Allow Partial Match </label>*/}\n                </div>\n\n\n                <Form className=\"search\" onSubmit={this.search}>\n                    <FormControl className=\"mr-sm-1 searchBar\" type=\"text\" placeholder=\"Type a word to Search.\" name=\"userInput\"/>\n                    <Button id=\"searchBtn\" variant=\"btn btn-light purple-btn\" type=\"submit\">Search</Button>\n                </Form>\n\n                <Download data={this.state.data} />\n<br/>\n                <h3> Search Term: {this.state.term}</h3>\n\n                {/*\\ when click search button*/}\n                {/*    pass the term to backend, insert into search table/ done*/}\n                {/*    query the page table. find all the entries with certain words.*/}\n                {/*    display the result*/}\n                {/*    download the result*/}\n\n                {this.state.data.length === 0? <h3>\"No results in DB for {this.state.term}!\"</h3>:\n                <div className=\"container\">\n\n                    {this.state.data.map((data, i) => {\n                        return (\n                            <div key={i} className=\"row\">\n                                <div className=\"col-sm-2\"></div>\n                                <div className=\"col-sm-8\">\n                                    <div className=\"box\">\n                                        <input data-index={i} id=\"ch\" className=\"checkbox\" type=\"checkbox\" name=\"check\" onChange={this.checkBox}/>\n                                        {/*<button className=\"btn btn-outline-primary\" data-index={i} onClick={this.delete}> Delete </button>*/}\n                                        <h4>Word Name: {data.wordname}</h4>\n                                        <h4>Title: {data.title}</h4>\n                                        <h4>Description: {data.description}</h4>\n                                        <h5><a href={data.url}>{data.url}</a></h5>\n                                        <h5>id: {data._id}</h5>\n                                        <h5>Created At: {data.createdAt}</h5>\n                                        <h5>Time to Search: </h5>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default SearchEngine;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport './App.css';\nimport Browser from './components/Browser';\nimport About from './components/About';\nimport Admin from './components/Admin';\nimport Home from './components/Home';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport SearchGoogle from \"./components/SearchGoogle\";\nimport FileInput from \"./components/FileInput\";\nimport MyNavbar from \"./components/MyNavbar\";\nimport SearchEngine from \"./components/SearchEngine\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"App-body\">\n                    <Router>\n                        <MyNavbar/>\n                        <Switch>\n                            <Route path=\"/\" exact component={Home}/>\n                            <Route path=\"/admin\" exact component={Admin}/>\n                            <Route path=\"/about/:msg\" component={About}/>\n                            <Route path=\"/browser/:info\" exact component={Browser}/>\n                            <Route path=\"/file\" exact component={FileInput}/>\n                            <Route path=\"/google\" exact component={SearchGoogle}/>\n                            <Route path=\"/custom\" exact component={SearchEngine}/>\n                        </Switch>\n                    </Router>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}