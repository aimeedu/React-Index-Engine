[{"/Users/aimee/Project/phase3deploy/client/src/index.js":"1","/Users/aimee/Project/phase3deploy/client/src/serviceWorker.js":"2","/Users/aimee/Project/phase3deploy/client/src/App.js":"3","/Users/aimee/Project/phase3deploy/client/src/components/About.js":"4","/Users/aimee/Project/phase3deploy/client/src/components/Admin.js":"5","/Users/aimee/Project/phase3deploy/client/src/components/Browser.js":"6","/Users/aimee/Project/phase3deploy/client/src/components/SearchGoogle.js":"7","/Users/aimee/Project/phase3deploy/client/src/components/SearchEngine.js":"8","/Users/aimee/Project/phase3deploy/client/src/components/FileInput.js":"9","/Users/aimee/Project/phase3deploy/client/src/components/Home.js":"10","/Users/aimee/Project/phase3deploy/client/src/components/MyNavbar.js":"11","/Users/aimee/Project/phase3deploy/client/src/components/usePosition.js":"12","/Users/aimee/Project/phase3deploy/client/src/components/Download.js":"13"},{"size":452,"mtime":1609954598879,"results":"14","hashOfConfig":"15"},{"size":5003,"mtime":1609954598880,"results":"16","hashOfConfig":"15"},{"size":1467,"mtime":1609954598863,"results":"17","hashOfConfig":"15"},{"size":706,"mtime":1609961766375,"results":"18","hashOfConfig":"15"},{"size":5947,"mtime":1609954598864,"results":"19","hashOfConfig":"15"},{"size":2350,"mtime":1609954598864,"results":"20","hashOfConfig":"15"},{"size":4798,"mtime":1609954598865,"results":"21","hashOfConfig":"15"},{"size":5863,"mtime":1609954598865,"results":"22","hashOfConfig":"15"},{"size":5337,"mtime":1609967642134,"results":"23","hashOfConfig":"15"},{"size":1029,"mtime":1609979932693,"results":"24","hashOfConfig":"15"},{"size":2986,"mtime":1609960910853,"results":"25","hashOfConfig":"15"},{"size":727,"mtime":1609954598865,"results":"26","hashOfConfig":"15"},{"size":5434,"mtime":1609954598864,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"16do1zx",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/Users/aimee/Project/phase3deploy/client/src/index.js",[],["59","60"],"/Users/aimee/Project/phase3deploy/client/src/serviceWorker.js",[],"/Users/aimee/Project/phase3deploy/client/src/App.js",[],"/Users/aimee/Project/phase3deploy/client/src/components/About.js",["61"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport './Components.css';\nimport {useParams} from 'react-router';\n\n// const style = {\n//     background: 'darkseagreen',\n//     margin: '60px',\n// }\n\n\nconst About = () => {\n    const {msg} = useParams();\n    return (\n        <div className=\"level1 email\">\n            {\n                msg === \"contact\" ?\n                    <h2><a href=\"mailto:aimeedu16@gmail.com?subject=Contact Developer\"target=\"_blank\">Contact Us</a></h2>\n                    : <h2>Developers: <br/>{ \"{ Fengzhang Du , Yaniv Bronshtein }\" }<br/>{ \"{  Adam Binder, Pizon Shetu, Mohanad Osman }\" }</h2>\n            }\n        </div>\n    )\n}\nexport default About;","/Users/aimee/Project/phase3deploy/client/src/components/Admin.js",[],"/Users/aimee/Project/phase3deploy/client/src/components/Browser.js",["62"],"import {useParams} from 'react-router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport './Components.css';\nimport {usePosition} from './usePosition';\n\nconst Browser = (props) => {\n    const {info} = useParams();\n\n    const nav = \"App Name: \" + window.navigator.appName + \"\\n\"\n        + \"App Version: \" + window.navigator.appVersion + \"\\n\"\n        + \"Cookies Enabled: \" + window.navigator.cookieEnabled + \"\\n\"\n        + \"App Language: \" + window.navigator.language + \"\\n\"\n        + \"App Online: \" + window.navigator.onLine + \"\\n\"\n        + \"Platform: \" + window.navigator.platform + \"\\n\"\n        + \"User-agent header: \" + navigator.userAgent + \"\\n\";\n\n    const win = \"Window innerHeight: \" + window.innerHeight + \"\\n\"\n        + \"Window innerWidth: \" + window.innerWidth + \"\\n\";\n\n    const scr = \"Screen Height: \" + window.screen.height + \"\\n\"\n        + \"Screen Width: \" + window.screen.width + \"\\n\"\n        + \"Screen availHeight: \" + window.screen.availHeight + \"\\n\"\n        + \"Screen availWidth: \" + window.screen.availWidth + \"\\n\"\n        + \"Screen colorDepth: \" + window.screen.colorDepth + \"\\n\"\n        + \"Screen pixelDepth: \" + window.screen.pixelDepth + \"\\n\";\n\n    const loc = \"Location href: \" + window.location.href + \"\\n\"\n        + \"Location hostname: \" + window.location.hostname + \"\\n\"\n        + \"Location pathname: \" + window.location.pathname + \"\\n\"\n        + \"Location protocol: \" + window.location.protocol + \"\\n\";\n\n    let geoLocation = \"\";\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(displayLocationInfo);\n    }\n\n    function displayLocationInfo(position) {\n        geoLocation = \"GeoLocation longitude: \" + position.coords.longitude+ \"\\n\"\n            + \"GeoLocation latitude: \"+ position.coords.latitude;\n    }\n\n    const {latitude, longitude} = usePosition();\n\n    return (\n        <div className=\"level1\">\n            {\n            info === \"navigator\" ? <h2>{nav}</h2> :\n                info === \"window\" ? <h2>{win}</h2> :\n                    info === \"screen\" ? <h2>{scr}</h2> :\n                        info === \"location\" ? <h2>{loc}</h2> :\n                            info === \"geolocation\" ? <h2>latitude: {latitude}<br/>longitude: {longitude}<br/></h2>:\n                                null\n            }\n        </div>\n    )\n}\n\nexport default Browser;","/Users/aimee/Project/phase3deploy/client/src/components/SearchGoogle.js",[],"/Users/aimee/Project/phase3deploy/client/src/components/SearchEngine.js",["63"],"import React, {Component} from 'react';\nimport {Button, Form, FormControl} from \"react-bootstrap\";\nimport './Components.css';\nimport Download from \"./Download\";\nimport axios from \"axios\";\n\nclass SearchEngine extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            caseInsensitive: false,\n            partialMatch: false,\n            term: null,\n            data:[],\n\n        }\n    }\n    /** Here, we are using $text and $search MongoDB operators for find all documents in collection collectionName which contains at least one word from the specified find query.\n     partial search */\n    search = async (e) => {\n        e.preventDefault();\n        const term = e.target.elements.userInput.value;\n        const username = e.target.elements.userInput.value;\n        this.setState({\n            term\n        });\n\n        let searchFreq, data;\n\n        if (this.state.caseInsensitive && this.state.partialMatch){\n            console.log(\"this.state.caseInsensitive && this.state.partialMatch\");\n        }\n\n        else if (this.state.caseInsensitive) {\n            console.log(\"this.state.caseInsensitive \");\n            const api_call = await fetch(`/admin/case/${term}`);\n            data = await api_call.json();\n            searchFreq = data.length;\n            console.log(searchFreq);\n        }\n\n        else if(this.state.partialMatch) {\n            const api_call = await fetch(`/admin/p/${term}`);\n            data = await api_call.json();\n            searchFreq = data.length;\n            console.log(searchFreq);\n        }\n\n        else {\n            //`http://localhost:5000/admin/${term}`\n            const api_call = await fetch(`/admin/${term}`);\n            data = await api_call.json();\n            searchFreq = data.length;\n            console.log(searchFreq);\n        }\n\n        /** send the term to back end 'http://localhost:5000/custom', add into db. */\n        axios.post('/custom', {term:term, searchFreq:searchFreq})\n            .then((res)=>{\n                console.log(res.data);\n                // console.log('Pass term to back end!');\n            });\n        this.setState({\n            data: data\n        })\n        console.log(this.state.data);\n\n    }\n    // a controlled form handles all form changes via state, which is a very React way of doing things.\n    checkBox = (event) => {\n\n        const index = event.target.dataset.index;\n\n        this.setState(state => {\n            const data = [...state.data];\n            const object = state.data[index];\n            object.isChecked = !object.isChecked;\n            data.splice(index, 1, object);\n            return {\n                data\n            }\n        })\n\n        console.log(this.state.data);\n        // this.setState({\n        //     data\n        // })\n    }\n\n    checkCase = () => {\n        this.setState({\n            caseInsensitive: !this.state.caseInsensitive,\n        })\n        console.log(this.state.caseInsensitive);\n    }\n\n    checkMatch = () => {\n        this.setState({\n            partialMatch: !this.state.partialMatch,\n        })\n        console.log(this.state.partialMatch);\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>My Custom Search Engine</h2>\n\n                <div className=\"checkbox\">\n                    <label><input type=\"checkbox\" name=\"case\" onChange={this.checkCase}/> Case Insensitive </label>\n                    {/*<label><input type=\"checkbox\" name=\"match\" onChange={this.checkMatch}/> Allow Partial Match </label>*/}\n                </div>\n\n\n                <Form className=\"search\" onSubmit={this.search}>\n                    <FormControl className=\"mr-sm-1 searchBar\" type=\"text\" placeholder=\"Type a word to Search.\" name=\"userInput\"/>\n                    <Button id=\"searchBtn\" variant=\"btn btn-light purple-btn\" type=\"submit\">Search</Button>\n                </Form>\n\n                <Download data={this.state.data} />\n<br/>\n                <h3> Search Term: {this.state.term}</h3>\n\n                {/*\\ when click search button*/}\n                {/*    pass the term to backend, insert into search table/ done*/}\n                {/*    query the page table. find all the entries with certain words.*/}\n                {/*    display the result*/}\n                {/*    download the result*/}\n\n                {this.state.data.length === 0? <h3>\"No results in DB for {this.state.term}!\"</h3>:\n                <div className=\"container\">\n\n                    {this.state.data.map((data, i) => {\n                        return (\n                            <div key={i} className=\"row\">\n                                <div className=\"col-sm-2\"></div>\n                                <div className=\"col-sm-8\">\n                                    <div className=\"box\">\n                                        <input data-index={i} id=\"ch\" className=\"checkbox\" type=\"checkbox\" name=\"check\" onChange={this.checkBox}/>\n                                        {/*<button className=\"btn btn-outline-primary\" data-index={i} onClick={this.delete}> Delete </button>*/}\n                                        <h4>Word Name: {data.wordname}</h4>\n                                        <h4>Title: {data.title}</h4>\n                                        <h4>Description: {data.description}</h4>\n                                        <h5><a href={data.url}>{data.url}</a></h5>\n                                        <h5>id: {data._id}</h5>\n                                        <h5>Created At: {data.createdAt}</h5>\n                                        <h5>Time to Search: </h5>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default SearchEngine;","/Users/aimee/Project/phase3deploy/client/src/components/FileInput.js",[],"/Users/aimee/Project/phase3deploy/client/src/components/Home.js",[],"/Users/aimee/Project/phase3deploy/client/src/components/MyNavbar.js",[],"/Users/aimee/Project/phase3deploy/client/src/components/usePosition.js",[],"/Users/aimee/Project/phase3deploy/client/src/components/Download.js",["64"],"import React, {Component} from 'react';\nimport './Components.css';\n\nclass Download extends Component {\n\n    // constructor(props){\n    //     super(props);\n    // }\n\n    selectAll = () => {\n        const results = document.getElementsByClassName(\"checkbox\");\n        for (let i = 0; i < results.length; i++) {\n            results[i].checked = true;\n        }\n        for (let i = 0; i< this.props.data.length; i++) {\n            this.props.data[i].isChecked = true;\n        }\n    }\n\n    deselectAll = () => {\n        const results = document.getElementsByClassName(\"checkbox\");\n        for (let i = 0; i < results.length; i++) {\n            results[i].checked = false;\n        }\n        for (let i = 0; i< this.props.data.length; i++) {\n            this.props.data[i].isChecked = false;\n        }\n    }\n\n    trimData = (data) => {\n        // copy the object array.\n        const arr = [...this.props.data];\n        let newArr = [];\n        for (let i = 0; i< arr.length; i++) {\n            if(arr[i].isChecked) {\n                newArr.push({\n                    title:arr[i].title.trim(),\n                    url:arr[i].url.trim(),\n                    description:arr[i].description.trim(),\n                });\n            }}\n        return newArr;\n    }\n\n    tocsv = (data) => {\n        const csvRows = [];\n        //get the headers\n        if (data.length !== 0){\n            const headers = Object.keys(data[0]);\n            csvRows.push(headers.join(','));\n\n            for (const row of data) {\n                const values = headers.map(header => {\n                    const escaped = (''+row[header]).replace(/\"/g, '\\\\\"');\n                    return `\"${escaped}\"`;\n                })\n                csvRows.push(values.join(','));\n            }\n            return csvRows.join('\\n');\n        }else{\n            return csvRows;\n        }\n    }\n\n    // toxml = (data) => {\n    //     let result = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<results>\\n\";\n    //     /* */\n    //     for(let i = 0; i<data.length; i++) {\n    //         if (data[i].isChecked) {\n    //             let title = data[i].title.trim();\n    //             let url = data[i].url.trim();\n    //             let description = data[i].description.trim();\n    //             result = result + \"<result>\\n<title>\" + title + \"</title>\\n\" +\n    //                 \"<url>\" + url + \"</url>\\n\" + \"<description>\" +\n    //                 description + \"</description>\\n</result>\\n\";\n    //         }\n    //     }\n    //     result += \"</results>\";\n    //     return result.trim();\n    // };\n\n    toxml = (data) => {\n        let result = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<results>\\n\";\n        for(let i = 0; i<data.length; i++) {\n\n                let title = data[i].title;\n                let url = data[i].url;\n                let description = data[i].description;\n                result = result + \"  <result>\\n    <title>\" + title + \"</title>\\n\" +\n                    \"    <url>\" + url + \"</url>\\n\" + \"    <description>\" +\n                    description + \"</description>\\n  </result>\\n\";\n\n        }\n        result += \"</results>\";\n        return result;\n    }\n\n    download = (data, fileName, type) => {\n        const file = new Blob([data], {type: type});\n        const a = document.createElement('a');\n        a.href = window.URL.createObjectURL(file);\n        a.download = fileName;\n        a.click();\n    }\n\n    downloadFile = (e) => {\n        e.preventDefault();\n        const input = e.target.elements.input.value;\n        const fileType = e.target.elements.options.value;\n        const fileName = input + fileType;\n        const trim = this.trimData(this.props.data);\n\n        // the data has already been stored in states in parent class, retrieve the data from this.props.data\n        if (fileType === \".csv\") {\n            const data = this.tocsv(trim);\n            this.download(data, fileName, \"text/csv\");\n        }\n        else if (fileType === \".json\") {\n            const data = JSON.stringify(trim);\n            // const data = this.tojson(this.props.data);\n            this.download(data, fileName, \"application/json\");\n        }else{\n            const data = this.toxml(trim);\n            this.download(data, fileName, \"text/xml\");\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form className=\"downloadFile\" onSubmit={this.downloadFile}>\n                    <div id=\"selector\">\n                        <button id=\"selectall\" className=\"btn btn-light purple-btn mr-sm-1\" type=\"button\" onClick={this.selectAll}>Select All</button>\n                        <button id=\"deselectall\" className=\"btn btn-light purple-btn\" type=\"button\" onClick={this.deselectAll}>Deselect All</button>\n                    </div>\n                        <button id=\"download\" className=\"btn btn-light mr-sm-1\" type=\"submit\">Download</button>\n                        <input id=\"fileName\" className=\"form-control mr-sm-1\" type=\"text\" placeholder=\"File Name\" name=\"input\" required=\"required\"/>\n                        <select name=\"options\" id=\"fileType\" className=\"custom-select\" required=\"required\">\n                            <option value=\".json\">.JSON</option>\n                            <option value=\".csv\">.CSV</option>\n                            <option value=\".xml\">.XML</option>\n                        </select>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Download;",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":18,"column":25,"nodeType":"71","endLine":18,"endColumn":103},{"ruleId":"72","severity":1,"message":"73","line":39,"column":9,"nodeType":"74","messageId":"75","endLine":39,"endColumn":20},{"ruleId":"72","severity":1,"message":"76","line":24,"column":15,"nodeType":"74","messageId":"75","endLine":24,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":90,"column":52,"nodeType":"79","messageId":"80","endLine":90,"endColumn":53},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-unused-vars","'geoLocation' is assigned a value but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]